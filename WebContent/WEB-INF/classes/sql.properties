search.product.bycategory.sp={CALL uspPagingSearchProduct(?,?,?,?,?,?)}
search.product.item.inventory=SELECT a.item_sku,a.name  AS name, a.short_description  AS short_description, a.mfg_part_number AS  mfg_part_number, CASE WHEN a.modified_price=0 THEN a.list_price ELSE a.modified_price END AS list_price, a.flagType AS flagType, a.weight  AS weight FROM estore_inventory a WHERE a.item_sku = ?
search.product.bycategory=SELECT * FROM (SELECT t1.item_sku, t1.name, t1.status, datediff(d,received_date,getdate()) as item_age, CASE WHEN modified_price=0 THEN list_price ELSE modified_price END AS list_price, t3.shopper_id, (select order_id from estore_basket where shopper_id = t3.shopper_id) as order_id, t1.flagtype, item_id = NULL , (ROW_NUMBER() OVER (ORDER_BY_CONDITOIN)) AS Row COLUMNS_ATTR FROM estore_basket_item t3 RIGHT OUTER JOIN estore_inventory as t1  ON t3.item_sku = t1.item_sku where (t1.category_id = ?) WHERE_CONDITION) tb1 WHERE Row >= ? AND Row <= ?
search.product.bycategory.count=SELECT COUNT(item_sku) AS count FROM (SELECT t1.item_sku, t1.name, t1.status, datediff(d,received_date,getdate()) as item_age, CASE WHEN modified_price=0 THEN list_price ELSE modified_price END AS list_price, t3.shopper_id, (select order_id from estore_basket where shopper_id = t3.shopper_id) as order_id, t1.flagtype, item_id = NULL FROM estore_basket_item t3 RIGHT OUTER JOIN estore_inventory as t1  ON t3.item_sku = t1.item_sku where (t1.category_id = ?) WHERE_CONDITION) tb1
search.product.attribute.bycategory=SELECT * FROM inventoryAttribute where category_id = ? ORDER BY ORDER_BY
search.product.attribute.bycategory.sortResult=SELECT * FROM inventoryAttribute where category_id = ? ORDER BY sortResult
search.product.inventory.bycategory=SELECT DISTINCT UPPER(status) as status FROM estore_inventory WHERE category_id = ? ORDER BY status
search.product.cosmetic.bycategory=SELECT DISTINCT(image_url) as cosmetic FROM estore_inventory WHERE category_id = ? ORDER BY image_url
search.product.attribute.searchvalue.bycategory=SELECT * FROM (SELECT DISTINCT ATTRIBUTE_ID  as ATTRIBUTE_ID FROM estore_inventory where (category_id = ?) AND (NOT ATTRIBUTE_ID IS NULL) AND (NOT ATTRIBUTE_ID = '')) tb1 ORDER_BY
search.product.attribute.searchvalue.bycategory2=SELECT * FROM (SELECT DISTINCT ATTRIBUTE_ID  as ATTRIBUTE_ID FROM estore_inventory where (category_id = ?) AND (status ='AGENT-STORE-AVAILABLE')  AND (NOT ATTRIBUTE_ID IS NULL) AND (NOT ATTRIBUTE_ID = '')) tb1 ORDER_BY
search.product.location=SELECT warehouse_location FROM estore_inventory WHERE item_sku IN (SELECT TOP 1 item_sku FROM estore_basket_item WHERE shopper_id = ?)
product.basket.item.exists=SELECT * FROM estore_basket_item WHERE item_sku = ?
product.basket.item.add=INSERT INTO estore_basket_item(shopper_id, created, modified, mfg_part_number, item_sku, quantity, placed_price, name, short_description, weight,byAgent) VALUES( ? ,GetDate(), GetDate(), ?, ? , ? ,?, ?, ?, ?,?)
product.basket.item.clear=UPDATE estore_inventory SET status=REPLACE(status, '-PENDING', '-AVAILABLE') where status LIKE '%-PENDING' AND item_sku in (select item_sku from estore_basket_item where shopper_id = ? AND byAgent = ?)
product.basket.item.sold=UPDATE estore_inventory SET status=REPLACE(status, '-PENDING', '-SOLD') where status LIKE '%-PENDING' AND item_sku in (select item_sku from estore_basket_item where shopper_id = ? AND byAgent = ? )
product.basket.item.all.delete=DELETE FROM estore_basket_item WHERE shopper_id = ? AND byAgent = ?
product.basket.delete=DELETE FROM estore_basket WHERE shopper_id = ? AND (userHold IS NULL OR userHold = '')
product.basket.delete.agent=DELETE FROM estore_basket WHERE shopper_id = ? AND (userHold IS NOT NULL AND userHold != '')
product.inventory.item.updateStatus=UPDATE estore_inventory set status=REPLACE(status, '-AVAILABLE', '-PENDING') where item_sku = ?
product.inventory.item.update.bySku=UPDATE estore_inventory SET STATUS = REPLACE(status, '-PENDING', '-AVAILABLE') WHERE (item_sku = ?) AND (STATUS LIKE '%-PENDING')
product.basket.item.delete=DELETE FROM estore_basket_item WHERE shopper_id = ? and item_sku = ?
product.basket.item.all=SELECT * FROM estore_basket_item WHERE shopper_id = ?
product.detail=SELECT T1.* from estore_inventory T1 where T1.item_sku = ?
product.getCategoryId=SELECT category_id FROM estore_inventory Where item_sku = ?
inventory.category.get=SELECT * FROM inventoryCategory WHERE category_id = ?
search.product.getNamePending_1=SELECT UserName FROM adminUsers WHERE agent_id = ?
search.product.getNamePending_2=SELECT ship_to_fname + ' ' + ship_to_lname FROM contactInfo WHERE shopper_id = ?
search.product.getNameHold_1=SELECT shopper_id FROM ordersHeld WHERE held_order = ?
search.product.getNameHold_2=SELECT ship_to_fname + ' ' + ship_to_lname FROM contactInfo WHERE shopper_id =  ?
search.product.getNameSold_1=SELECT TOP 1 ordernumber FROM orderline WHERE item_sku = ? ORDER BY created DESC
search.product.getNameSold_2=SELECT ship_to_name FROM orderheader WHERE ordernumber = ?
search.customer.all = {CALL uspPagingCustomerLookup(?,?,?,?)} 



search.customer.linkNumber = shopper_number = '0'
search.customer.shipFname = ship_to_fname LIKE '%0%'
search.customer.shipLname = ship_to_lname LIKE '%0%'
search.customer.shipCompany = ship_to_company LIKE '%0%'
search.customer.shipPhone = ship_to_phone LIKE '0%'
search.customer.billCompany = bill_to_company LIKE '%0%'
search.customer.billFname = bill_to_fname LIKE '%0%'
search.customer.billLname = bill_to_lname LIKE '%0%'
search.customer.billPhone = bill_to_phone LIKE '0%'
authenticate.agent = SELECT * FROM adminUsers WHERE UserName = ? AND Password = ?
authenticate.customer = SELECT * FROM contactInfo WHERE LoginID = ? AND Password = ?
get.state.all= SELECT * FROM dataStates
get.country.all= SELECT * FROM dataCountries
agent.get=SELECT * FROM adminUsers WHERE agent_Id = ?
#Order Manager
search.order.count=SELECT COUNT (DISTINCT T1.OrderNumber) as rownum FROM orderHeader T1 ,orderLine T2 WHERE T1.OrderNumber = T2.OrderNumber
search.order.all= SELECT DISTINCT T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.ship_to_company, T1.listing, T1.shopper_id, T1.createdDate, T1.total_total, T1.oadjust_subtotal, T1.shipping_total, (T1.total_disc / T1.total_list * 100) AS discount_perc, COUNT(T2.OrderNumber) AS items_sold FROM orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber GROUP BY T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.shopper_id, T1.listing, T1.createdDate, T1.total_total, T1.oadjust_subtotal, T1.shipping_total, T1.total_disc, total_list, T2.OrderNumber, T1.ship_to_company ORDER BY T1.createdDate DESC

sql.getAsp_mhz.fromOrder1= SELECT count(l.item_sku) as total_unit, sum(l.discounted_price / 100) as total_price, sum(cast(i.attribute13 as int)) as total_mhz FROM orderline l INNER JOIN estore_history i ON l.ordernumber = i.order_number AND l.item_sku = i.item_sku WHERE i.category_id = '11946' AND l.ordernumber = ?
sql.getAsp_mhz.fromOrder2= SELECT count(l.item_sku) as total_unit, sum(l.discounted_price / 100) as total_price, sum(cast(i.attribute13 as int)) as total_mhz FROM orderline l INNER JOIN estore_inventory i ON l.item_sku = i.item_sku WHERE i.category_id = '11946' AND l.ordernumber = ?
sql.getAsp_mhz.fromOrder3=SELECT count(l.item_sku) as total_unit, sum(l.discounted_price / 100) as total_price, sum(cast(i.attribute13 as int)) as total_mhz FROM orderline l INNER JOIN estore_history i ON l.ordernumber = i.order_number AND l.item_sku = i.item_sku WHERE i.category_id = '11949' AND l.ordernumber = ?
sql.getAsp_mhz.fromOrder4=SELECT count(l.item_sku) as total_unit, sum(l.discounted_price / 100) as total_price, sum(cast(i.attribute13 as int)) as total_mhz FROM orderline l INNER JOIN estore_inventory i ON l.item_sku = i.item_sku WHERE i.category_id = '11949' AND l.ordernumber = ?
#sql.getAgentName.fromAgenId=SELECT username FROM adminusers WHERE agent_id = ?
sql.getAgentName.fromShopperID = SELECT username FROM adminusers t1 INNER JOIN contactinfo t2 ON t1.agent_id=t2.agent_id where t2.shopper_id = ?
sql.getCusName.fromShopperID = SELECT loginID FROM contactinfo where shopper_id = ?
#sql.orderAll.paging=SELECT * FROM   (SELECT ROW_NUMBER() OVER (ORDER BY T1.createdDate DESC) AS rownum, T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name,T1.ship_to_company, T1.listing, T1.shopper_id, T1.createdDate, T1.total_total,T1.oadjust_subtotal, T1.shipping_total, (T1.total_disc / T1.total_list * 100)AS discount_perc, COUNT(T2.OrderNumber) AS items_sold FROM orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber GROUP BY T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.shopper_id, T1.listing, T1.createdDate, T1.total_total, T1.oadjust_subtotal, T1.shipping_total, T1.total_disc, total_list, T2.OrderNumber, T1.ship_to_company )AS orderHeaderRow WHERE  rownum >= ? AND rownum <= ?
#sql.orderAll.filter.type.order1=SELECT * FROM   (SELECT ROW_NUMBER() OVER
sql.orderAll.filter.type.order2=AS rownum,T1.OrderNumber, T1.AgentIDEnter, T3.shopper_number, T1.ship_to_name, T1.ship_to_company, T1.listing, T1.shopper_id, T1.createdDate, T1.total_total, T1.oadjust_subtotal, T1.shipping_total, (T1.total_disc / T1.total_list * 100) AS discount_perc, COUNT(T2.OrderNumber) AS items_sold FROM orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber INNER JOIN contactInfo T3 ON T1.shopper_id = T3.shopper_id where not T1.shopper_id is null
sql.orderAll.filter1=SELECT * FROM   (SELECT ROW_NUMBER() OVER (  ORDER BY T1.createdDate) AS rownum,T1.OrderNumber, T1.AgentIDEnter, T3.shopper_number, T1.ship_to_name, T1.ship_to_company, T1.listing, T1.shopper_id, T1.createdDate, T1.total_total, T1.oadjust_subtotal, T1.shipping_total, (T1.total_disc / T1.total_list * 100) AS discount_perc, COUNT(T2.OrderNumber) AS items_sold FROM orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber INNER JOIN contactInfo T3 ON T1.shopper_id = T3.shopper_id where not T1.shopper_id is null
sql.orderAll.filter2= GROUP BY T3.shopper_number, T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.shopper_id, T1.listing, T1.createdDate, T1.total_total, T1.oadjust_subtotal, T1.shipping_total, T1.total_disc, total_list, T2.OrderNumber, T1.ship_to_company )AS orderHeaderRow
sql.orderAll.filter3=WHERE  rownum >= ? AND rownum <= ?
sql.orderAll.paging.sp={CALL uspOrderLookup(?,?,?,?,?)}
sql.orderAll.paging.export=SELECT T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name,T1.ship_to_company, T1.listing, T1.shopper_id, T1.createdDate, T1.total_total,T1.oadjust_subtotal, T1.shipping_total, (T1.total_disc / T1.total_list * 100)AS discount_perc, COUNT(T2.OrderNumber) AS items_sold FROM orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber GROUP BY T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.shopper_id, T1.listing, T1.createdDate, T1.total_total, T1.oadjust_subtotal, T1.shipping_total, T1.total_disc, total_list, T2.OrderNumber, T1.ship_to_company ORDER BY T1.createdDate DESC
#HELD ORDERS
#Customer
#sql.order.customer.held=SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY t1.shopper_id) AS rownum, t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname + ' ' + t3.ship_to_lname AS ship_to_name, t3.ship_to_company, t3.bill_to_lname + ' ' + t3.bill_to_fname as userHold FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t3.shopper_id = ?  and (t2.userHold is null or t2.userHold = '') GROUP BY t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname, t3.ship_to_lname, t3.ship_to_company, t3.bill_to_lname, t3.bill_to_fname ) as heldRow WHERE  rownum >= ? AND rownum <= ? order by modified desc, userHold
sql.order.customer.held.sp={CALL uspGetOrderCustomerHeld(?,?,?,?)}
sql.order.customer.held.export=SELECT t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname + ' ' + t3.ship_to_lname AS ship_to_name, t3.ship_to_company, t3.bill_to_lname + ' ' + t3.bill_to_fname as userHold FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t3.shopper_id = ? and (t2.userHold is null or t2.userHold = '') GROUP BY t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname, t3.ship_to_lname, t3.ship_to_company, t3.bill_to_lname, t3.bill_to_fname  order by modified desc, userHold
sql.order.customer.total.held=SELECT SUM(placed_price) AS total_total FROM estore_basket_item WHERE shopper_id IN (SELECT t1.held_order FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id  WHERE t3.shopper_id =? and (t2.userHold is null or t2.userHold = '') GROUP BY t1.held_order)
sql.order.customer.held.count=SELECT COUNT( DISTINCT t1.held_order) FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t3.shopper_id=? and (t2.userHold is null or t2.userHold = '')
#Admin
sql.order.held.sp={CALL uspGetOrderHeld(?,?,?,?,?)}
#sql.order.held.agent.admin=SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY t1.shopper_id) AS rownum, t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname + ' ' + t3.ship_to_lname AS ship_to_name, t3.ship_to_company, t3.bill_to_lname + ' ' + t3.bill_to_fname as userHold FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold is not null and t2.userHold != '' GROUP BY t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname, t3.ship_to_lname, t3.ship_to_company, t3.bill_to_lname , t3.bill_to_fname ) as heldRow WHERE  rownum >= ? AND rownum <= ? order by modified desc , ship_to_name
sql.order.held.agent.admin.count=SELECT COUNT( DISTINCT t1.held_order) FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold is not null and t2.userHold != ''
sql.order.total.held.admin.agent=SELECT SUM(placed_price) AS total_total FROM estore_basket_item WHERE shopper_id IN (SELECT t1.held_order FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id where t2.userHold is not null and t2.userHold != '' GROUP BY t1.held_order)
#sql.order.held.agent.admin.customer=SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY t1.shopper_id) AS rownum, t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname + ' ' + t3.ship_to_lname AS ship_to_name, t3.ship_to_company, t3.bill_to_lname + ' ' + t3.bill_to_fname as userHold FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold is null or t2.userHold = '' GROUP BY t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname, t3.ship_to_lname, t3.ship_to_company, t3.bill_to_lname , t3.bill_to_fname ) as heldRow WHERE  rownum >= ? AND rownum <= ? order by modified desc , ship_to_name
sql.order.held.agent.admin.customer.count=SELECT COUNT( DISTINCT t1.held_order) FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold is null or t2.userHold = ''
sql.order.total.held.admin.customer=SELECT SUM(placed_price) AS total_total FROM estore_basket_item WHERE shopper_id IN (SELECT t1.held_order FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold is null or t2.userHold = '' GROUP BY t1.held_order)
#Agent
#sql.order.held.agent=SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY t1.shopper_id) AS rownum, t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname + ' ' + t3.ship_to_lname AS ship_to_name, t3.ship_to_company, t3.bill_to_lname + ' ' + t3.bill_to_fname as userHold FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold = ? GROUP BY t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname, t3.ship_to_lname, t3.ship_to_company, t3.bill_to_lname ,  t3.bill_to_fname ) as heldRow WHERE  rownum >= ? AND rownum <= ? order by modified desc , ship_to_name
sql.order.held.agent.count=SELECT COUNT( DISTINCT t1.held_order) FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold = ?
sql.order.total.held.agent=SELECT SUM(placed_price) AS total_total FROM estore_basket_item WHERE shopper_id IN (SELECT t1.held_order FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t2.userHold = ? GROUP BY t1.held_order)
#sql.order.held.agent.customer=SELECT * FROM (SELECT ROW_NUMBER() OVER (ORDER BY t1.shopper_id) AS rownum, t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname + ' ' + t3.ship_to_lname AS ship_to_name, t3.ship_to_company, t3.bill_to_lname + ' ' + t3.bill_to_fname as userHold FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t1.shopper_id in (select shopper_id from contactInfo where agent_id= ?) and (t2.userHold is null or t2.userHold='') GROUP BY t1.shopper_id, t1.held_order, t2.order_id, t2.modified, t3.ship_to_fname, t3.ship_to_lname, t3.ship_to_company, t3.bill_to_lname , t3.bill_to_fname ) as heldRow WHERE  rownum >= ? AND rownum <= ? order by modified desc , ship_to_name
sql.order.held.agent.customer.count=SELECT COUNT( DISTINCT t1.held_order) FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id WHERE t1.shopper_id in (select shopper_id from contactInfo where agent_id= ?) and (t2.userHold is null or t2.userHold='')
sql.order.total.held.customer=SELECT SUM(placed_price) AS total_total FROM estore_basket_item WHERE shopper_id IN (SELECT t1.held_order FROM ordersHeld t1 INNER JOIN estore_basket t2 ON t1.held_order = t2.shopper_id INNER JOIN contactInfo t3 ON t1.shopper_id = t3.shopper_id  WHERE t1.shopper_id in (select shopper_id from contactInfo where agent_id= ?) and (t2.userHold is null or t2.userHold='') GROUP BY t1.held_order)
sql.order.held.totalsys=SELECT DISTINCT shopper_id, COUNT(shopper_id) AS items, SUM(placed_price) AS total_total FROM estore_basket_item WHERE shopper_id = ? GROUP BY shopper_id
sql.order.held.discount=SELECT DISTINCT e.shopper_id, sum(e.placed_price), sum(CASE WHEN i.modified_price=0 THEN i.list_price ELSE i.modified_price END) FROM estore_basket_item e INNER JOIN estore_inventory i ON e.item_sku = i.item_sku WHERE e.shopper_id = ? GROUP BY e.shopper_id
sql.order.held.avghmz=SELECT * FROM avg_mhz WHERE ordernumber = ?
#END
sql.order.shopper.sp={CALL uspOrdersByShopper(?,?,?,?,?)}
sql.order.shopper.count = SELECT COUNT(DISTINCT T1.shopper_id) FROM orderHeader T1, contactInfo T2 where T1.shopper_id=t2.shopper_id
#sql.order.shopper.all=SELECT * FROM   (SELECT ROW_NUMBER() OVER (ORDER BY t1.ship_to_name) AS rownum, T2.ship_to_lname, T1.ship_to_name,T1.ship_to_company, T1.shopper_id, count(OrderNumber) num_orders, sum(total_total) total_sum, avg(total_total) total_avg, max(total_total) total_max, min(total_total) total_min from orderHeader T1, contactInfo T2 where T1.shopper_id=t2.shopper_id group by T1.ship_to_name, T1.ship_to_company, T1.shopper_id, T2.ship_to_lname, T1.ship_to_name) As orderHeaderRow WHERE  rownum >= ? AND rownum <=?  order by ship_to_name
sql.order.shopper.filter1 = SELECT * FROM   (SELECT ROW_NUMBER() OVER
sql.order.shopper.filter1a= AS rownum, t1.ship_to_name, t1.ship_to_company, t1.shopper_id, count(t1.OrderNumber) num_orders, sum(t1.total_total) total_sum, avg(t1.total_total) total_avg, max(t1.total_total) total_max, min(t1.total_total) total_min from orderHeader t1 INNER JOIN  contactInfo t2 ON t1.shopper_id=t2.shopper_id where t1.shopper_id is not null
sql.order.shopper.filter2 = group by t1.ship_to_name, t1.ship_to_company, t1.shopper_id )As orderHeaderRow WHERE  rownum >= ? AND rownum <=?
#sql.order.shoper.filter.count = SELECT COUNT(DISTINCT t1.shopper_id ) from orderHeader t1 INNER JOIN  contactInfo t2 on t1.shopper_id=t2.shopper_id where t1.shopper_id is not null
sql.order.date.year=SELECT { fn MONTHNAME(createdDate) } month, { fn MONTH(createdDate) } month_id, count(OrderNumber) num_orders, sum(total_total) total_sum, avg(total_total) total_avg, max(total_total) total_max, min(total_total) total_min, AVG(discount_total / total_total * 100) AS disc_avg, MAX(discount_total / total_total * 100) AS disc_max, MIN(discount_total / total_total * 100) AS disc_min from orderHeader where { fn YEAR(createdDate) } = ? AND total_total > 0 group by { fn MONTHNAME(createdDate) }, { fn MONTH(createdDate) } order by 2
sql.order.date.month=SELECT { fn DAYOFMONTH(createdDate) } day, count(OrderNumber) num_orders, sum(total_total) total_sum, avg(total_total) total_avg, max(total_total) total_max, min(total_total) total_min, AVG(CASE WHEN total_total >  0 THEN (discount_total / total_total * 100)	END) AS disc_avg, MAX(CASE WHEN total_total >  0 THEN (discount_total / total_total * 100) END) AS disc_max, MIN(CASE WHEN total_total >  0 THEN (discount_total / total_total * 100) END) AS disc_min from orderHeader where { fn YEAR(createdDate) } = ? and { fn MONTH(createdDate) } = ? group by { fn DAYOFMONTH(createdDate) } order by 1
sql.order.date.day.count=SELECT COUNT (DISTINCT T1.OrderNumber)FROM orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber WHERE { fn YEAR(createdDate) } = ? and { fn MONTH(createdDate) } = ? and { fn DAYOFMONTH(createdDate) } = ? AND T2.item_sku <> 'FREE SWKIT v3.0'
sql.order.date.day.sp={CALL uspGetOrderDateDay(?,?,?,?,?,?)}
#sql.order.date.day=SELECT * FROM   (SELECT ROW_NUMBER() OVER (  ORDER BY T1.OrderNumber) AS rownum,T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.shopper_id, T1.createdDate, T1.total_total, case when T1.total_total = 0 then 0 else T1.discount_total / T1.total_total * 100 end AS discount_perc, COUNT(T2.OrderNumber) AS items_sold FROM orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber WHERE { fn YEAR(createdDate) } = ? and { fn MONTH(createdDate) } = ? and { fn DAYOFMONTH(createdDate) } = ? AND T2.item_sku <> 'FREE SWKIT v3.0' GROUP BY T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.shopper_id, T1.createdDate, T1.total_total, T1.discount_total, T2.OrderNumber ) As headRow WHERE  rownum >= ? AND rownum <=? ORDER BY createdDate DESC
sql.order.agents.all=SELECT adminUsers.UserName AS Agent, orderHeader.AgentIDEnter, COUNT(orderline.item_sku) AS item_sku, SUM(orderline.discounted_price / 100) AS total_sum, AVG(orderline.discounted_price / 100) AS unit_asp, MAX(orderHeader.oadjust_subtotal) AS total_max, MIN(orderHeader.oadjust_subtotal) AS total_min, AVG(orderHeader.discount_total / (orderHeader.oadjust_subtotal + orderHeader.discount_total) * 100) AS disc_avg, MAX(orderHeader.discount_total / (orderHeader.oadjust_subtotal + orderHeader.discount_total) * 100) AS disc_max, MIN(orderHeader.discount_total / (orderHeader.oadjust_subtotal + orderHeader.discount_total) * 100) AS disc_min FROM orderHeader INNER JOIN adminUsers ON orderHeader.AgentIDEnter = convert(varchar,adminUsers.agent_id) INNER JOIN orderline ON orderheader.ordernumber = orderline.ordernumber WHERE orderheader.AgentIDEnter!=201 AND orderheader.createddate BETWEEN ? AND ?  AND orderHeader.orderstatus NOT IN ('CANCELED', 'ERROR') AND total_total > 0 AND orderline.item_sku NOT LIKE 'FREE%' GROUP BY adminUsers.UserName, orderHeader.AgentIDEnter
sql.order.agents.count=SELECT COUNT (DISTINCT adminUsers.UserName) FROM orderHeader INNER JOIN adminUsers ON orderHeader.AgentIDEnter = convert(varchar,adminUsers.agent_id) INNER JOIN orderline ON orderheader.ordernumber = orderline.ordernumber WHERE orderheader.createddate BETWEEN ? AND ?  AND orderHeader.orderstatus NOT IN ('CANCELED', 'ERROR') AND total_total > 0 AND orderline.item_sku NOT LIKE 'FREE%'
sql.order.agents.detail.sp={CALL uspGetOrderByAgent(?,?,?,?,?,?)}
#sql.order.agents.detail=SELECT * FROM   (SELECT ROW_NUMBER() OVER(ORDER BY createdDate DESC) AS row_num, adminUsers.UserName AS Agent, T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.ship_to_company, T1.shopper_id, T1.createdDate, T1.total_total, T1.total_disc / T1.total_list * 100 AS discount_perc, T1.total_disc, COUNT(T2.OrderNumber) AS items_sold FROM adminUsers INNER JOIN orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber ON T1.AgentIDEnter = convert(varchar,adminUsers.agent_id) WHERE T1.createddate BETWEEN ? AND ? AND T1.orderstatus <> 'CANCELED' AND (adminUsers.agent_id = ?) AND total_total > 0 AND T2.item_sku NOT LIKE 'FREE%' GROUP BY adminUsers.UserName, T1.OrderNumber, T1.AgentIDEnter, T1.ship_to_name, T1.ship_to_company, T1.shopper_id, T1.createdDate, T1.total_total, T1.total_disc, T1.total_list, T2.OrderNumber )As orderHeaderRow WHERE  row_num >= ? AND row_num <= ?
sql.order.agents.detail.count=SELECT COUNT  (DISTINCT T1.OrderNumber) AS row_num FROM adminUsers INNER JOIN orderHeader T1 INNER JOIN orderLine T2 ON T1.OrderNumber = T2.OrderNumber ON T1.AgentIDEnter = convert(varchar,adminUsers.agent_id) WHERE T1.createddate BETWEEN ? AND ? AND T1.orderstatus <> 'CANCELED' AND (adminUsers.agent_id = ?) AND total_total > 0 AND T2.item_sku NOT LIKE 'FREE%'

sql.order.shopper.list.sp={CALL uspShopperOrders(?,?,?,?)}
#sql.order.shopper.list.count=SELECT COUNT(DISTINCT createdDate) FROM orderHeader where shopper_id = ?
#sql.order.shopper.list=SELECT * FROM   (SELECT ROW_NUMBER() OVER(ORDER BY createdDate desc) AS row_num,OrderNumber,createdDate, total_total FROM orderHeader where shopper_id = ?)As orderHeaderRow WHERE  row_num >= ? AND row_num <=?
sql.order.shopper.detail=SELECT ship_to_fname, ship_to_lname, shopper_number from contactInfo where shopper_id =?
sql.order.agent.report.monitersize=SELECT DISTINCT brandtype FROM agent_report WHERE category_id = '11955' AND brandtype <> 'N/A' ORDER BY brandtype
sql.order.agent.report.dockingStation=SELECT DISTINCT brandtype FROM agent_report WHERE category_id = '11958' AND brandtype <> 'N/A' ORDER BY brandtype
sql.order.agent.report.BrandPartNetWorking=SELECT DISTINCT brandtype FROM agent_report WHERE category_id in( '11961', '11962', '11963') AND brandtype <> 'N/A' ORDER BY brandtype
sql.order.agent.report.BrandServer=SELECT DISTINCT brandtype FROM agent_report WHERE category_id = '11950' AND brandtype <> 'N/A' ORDER BY brandtype

sql.order.agent.report.CosmeticGrade=SELECT DISTINCT (cosmetic_grade) FROM agent_report where cosmetic_grade is not null

sql.order.summary.report.agent.displayed=SELECT agent_id FROM adminUsers WHERE report=1

#sql.order.summary.report.model.protype1=SELECT sum(salesprice) as sale, count(item_sku) as unit, sum(speed) as mhz, count(DISTINCT(ordernumber)) as orders, channel FROM agent_report WHERE
sql.order.summary.report.model.protype1=SELECT sum(CASE WHEN (channel='MRI' and (agentid not in (AGENTIDS))) THEN 0 ELSE salesprice END) as sale, count(CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN item_sku END) as unit, sum(CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN speed END) as mhz, count(DISTINCT CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN ordernumber END) as orders, channel  FROM agent_report WHERE

sql.order.summary.report.model.protype2=AND (ordereddate BETWEEN ? AND ?) GROUP BY channel

#sql.order.summary.report.filter1=SELECT DISTINCT ordernumber FROM agent_report WHERE
sql.order.summary.report.filter1=SELECT DISTINCT (CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN ordernumber END) FROM agent_report WHERE

sql.order.summary.report.filter2=AND (ordereddate BETWEEN ? AND ?)
#sql.order.summary.report.monitor1=SELECT count(DISTINCT(ordernumber)) as orders, channel FROM agent_report WHERE category_id = 11955 AND (ordereddate BETWEEN ? AND ?) AND ordernumber
sql.order.summary.report.monitor1=SELECT count(DISTINCT CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN ordernumber END) as orders, channel FROM agent_report WHERE category_id = 11955 AND (ordereddate BETWEEN ? AND ?) AND ordernumber

#sql.order.summary.report.monitor2a=SELECT count(DISTINCT(ordernumber)) as orders, channel FROM agent_report WHERE category_id = 11955 AND
sql.order.summary.report.monitor2a=SELECT count(DISTINCT CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN ordernumber END) as orders, channel FROM agent_report WHERE category_id = 11955 AND

sql.order.summary.report.monitor2b=AND (ordereddate BETWEEN ? AND ? ) AND ordernumber
#sql.order.summary.report.sales.unit=SELECT sum(salesprice) as sales, count(item_sku) as unit, channel FROM agent_report WHERE category_id = 11955 AND (ordereddate BETWEEN ? AND ?) GROUP BY channel
sql.order.summary.report.sales.unit=SELECT sum(CASE WHEN (channel='MRI' and (agentid not in (AGENTIDS))) THEN 0 ELSE salesprice END) as sales, count(CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN item_sku END) as unit, channel FROM agent_report WHERE category_id = 11955 AND (ordereddate BETWEEN ? AND ?) GROUP BY channel

#sql.order.summary.report.sales.unit1=SELECT sum(salesprice) as sales, count(item_sku) as unit, channel FROM agent_report WHERE category_id = 11955 AND
sql.order.summary.report.sales.unit1=SELECT sum(CASE WHEN (channel='MRI' and (agentid not in (AGENTIDS))) THEN 0 ELSE salesprice END) as sales, count(CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN item_sku END) as unit, channel FROM agent_report WHERE category_id = 11955 AND

sql.order.summary.report.sales.unit2=AND (ordereddate BETWEEN ? AND ?) GROUP BY channel

#sql.order.summary.report.nonsyscat.order1=SELECT count(DISTINCT(ordernumber)), channel FROM agent_report WHERE
sql.order.summary.report.nonsyscat.order1=SELECT count(DISTINCT CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN ordernumber END), channel FROM agent_report WHERE

sql.order.summary.report.nonsyscat.order2=AND (ordereddate BETWEEN ? AND ?) AND ordernumber

#sql.order.summary.report.nonsyscat.sales.unit1=SELECT sum(salesprice) as sales, count(item_sku) as unit, channel FROM agent_report WHERE
sql.order.summary.report.nonsyscat.sales.unit1=SELECT sum(CASE WHEN (channel='MRI' and (agentid not in (AGENTIDS))) THEN 0 ELSE salesprice END) as sales, count(CASE WHEN ((channel='MRI' and (agentid in (AGENTIDS))) OR (channel<>'MRI')) THEN item_sku END) as unit, channel FROM agent_report WHERE

sql.order.summary.report.nonsyscat.sales.unit2=AND (ordereddate BETWEEN ? AND ?) GROUP BY channel

sql.order.summary.report.agent.model.protype1=SELECT sum(salesprice) as sales, count(item_sku) as unit, sum(speed) as mhz, username as agents FROM agent_report INNER JOIN adminusers ON agentid = agent_id WHERE channel = 'MRI' AND report = 1 AND
sql.order.summary.report.agent.model.protype2=AND (ordereddate BETWEEN ? AND ? ) GROUP BY agentid, username
sql.order.summary.report.agent.monitor1=SELECT sum(salesprice) as sales, count(item_sku) as unit, sum(speed) as mhz, username as agents FROM agent_report INNER JOIN adminusers ON agentid = agent_id WHERE channel = 'MRI' AND report = 1 AND category_id = '11955' AND (ordereddate BETWEEN ? AND ?) GROUP BY agentid, username
sql.order.summary.report.agent.monitor2a=SELECT sum(salesprice) as sales, count(item_sku) as unit, sum(speed) as mhz, username as agents FROM agent_report INNER JOIN adminusers ON agentid = agent_id WHERE channel = 'MRI' AND report = 1 AND category_id = '11955' AND
sql.order.summary.report.agent.monitor2b=AND (ordereddate BETWEEN ? AND ?) GROUP BY agentid, username
sql.order.summary.report.agent.nonsyscat1=SELECT sum(salesprice) as sales, count(item_sku) as unit, sum(speed) as mhz, username as agents FROM agent_report INNER JOIN adminusers ON agentid = agent_id WHERE channel = 'MRI' AND report = 1 AND
sql.summary.report.agent.name=Select distinct username as agents FROM adminusers WHERE report = 1
#END

search.shopper.count = SELECT COUNT(shopper_id) FROM contactInfo WHERE shopper_id IS NOT NULL
#search.shopper.all.paging = SELECT * FROM (SELECT ROW_NUMBER() OVER(ORDER BY shopper_id) AS row_num, shopper_id, shopper_number, linkNumber, BillingGrpID, ContactType, Program, Contact_Status, CreditRating, TermCode, specialty_discount, latperdiscount, latamtdiscount, latexpdate, insperdiscount, insamtdiscount, insexpdate, optperdiscount, optamtdiscount, optexpdate, dimperdiscount, dimamtdiscount, dimexpdate, monperdiscount, monamtdiscount, monexpdate, serperdiscount, seramtdiscount, serexpdate, worperdiscount, woramtdiscount, worexpdate, tax_exempt, tax_exempt_number, tax_exempt_expire, promo_email, heardAboutSiteFrom, primUse, agent_id, agent_id_exp, ship_to_fname, ship_to_mname, ship_to_lname, ship_to_fullName, ship_to_salutation, ship_to_title, ship_to_company, ship_to_address1, ship_to_address2, ship_to_address3, ship_to_city, ship_to_state, ship_to_postal, ship_to_county, ship_to_country, ship_to_fax, ship_to_phone, ship_to_phoneext, ship_to_email, ship_method, bill_to_fname, bill_to_mname, bill_to_lname, bill_to_salutation, bill_to_title, bill_to_company, bill_to_address1, bill_to_address2, bill_to_address3, bill_to_city, bill_to_state, bill_to_postal, bill_to_county, bill_to_country, bill_to_fax, bill_to_phone, bill_to_phoneext, bill_to_email, loginID, password, hint, answer, cc_name, cc_number, cc_type, cc_expmonth, cc_expyear, createdDate, updatedDate, calledDate, recallDate, fmID, account_type, loa, creditline, creditexp, creditavail, creditcomment FROM contactInfo) AS contactInfoWithRowNumbers WHERE row_num >= ? AND row_num <= ?;
search.shopper.filter1 = SELECT * FROM (SELECT ROW_NUMBER() OVER(ORDER BY ship_to_fname) AS row_num, shopper_id, shopper_number, linkNumber, BillingGrpID, ContactType, Program, Contact_Status, CreditRating, TermCode, specialty_discount, latperdiscount, latamtdiscount, latexpdate, insperdiscount, insamtdiscount, insexpdate, optperdiscount, optamtdiscount, optexpdate, dimperdiscount, dimamtdiscount, dimexpdate, monperdiscount, monamtdiscount, monexpdate, serperdiscount, seramtdiscount, serexpdate, worperdiscount, woramtdiscount, worexpdate, tax_exempt, tax_exempt_number, tax_exempt_expire, promo_email, heardAboutSiteFrom, primUse, agent_id, agent_id_exp, ship_to_fname, ship_to_mname, ship_to_lname, ship_to_fullName, ship_to_salutation, ship_to_title, ship_to_company, ship_to_address1, ship_to_address2, ship_to_address3, ship_to_city, ship_to_state, ship_to_postal, ship_to_county, ship_to_country, ship_to_fax, ship_to_phone, ship_to_phoneext, ship_to_email, ship_method, bill_to_fname, bill_to_mname, bill_to_lname, bill_to_salutation, bill_to_title, bill_to_company, bill_to_address1, bill_to_address2, bill_to_address3, bill_to_city, bill_to_state, bill_to_postal, bill_to_county, bill_to_country, bill_to_fax, bill_to_phone, bill_to_phoneext, bill_to_email, loginID, password, hint, answer, cc_name, cc_number, cc_type, cc_expmonth, cc_expyear, createdDate, updatedDate, calledDate, recallDate, fmID, account_type, loa, creditline, creditexp, creditavail, creditcomment FROM contactInfo WHERE shopper_id IS NOT NULL
search.shopper.filter2 = ) AS contactInfoWithRowNumbers WHERE row_num >= ? AND row_num <= ? ORDER BY ship_to_fname
search.shopper.paging.sp = {CALL ShopperListPaging(?,?,?,?)}

search.shopper.year = select { fn MONTH(createdDate) } month, count(shopper_id) num_shoppers from contactInfo where { fn YEAR(createdDate) } = ? group by { fn MONTH(createdDate) } order by 1
search.shopper.month = select { fn DAYOFMONTH(createdDate) } day , count(shopper_id) num_shoppers from contactInfo where  { fn YEAR(createdDate) } = ? and { fn MONTH(createdDate) } = ? group by { fn DAYOFMONTH(createdDate) } order by 1
search.shopper.day = select * FROM (SELECT ROW_NUMBER() OVER (ORDER BY ship_to_fname) AS rownum, ship_to_lname, ship_to_fname, ship_to_company, shopper_id, createdDate from contactInfo where { fn YEAR(createdDate) } = ? and { fn MONTH(createdDate) } = ? and { fn DAYOFMONTH(createdDate) } = ? ) as newShopper WHERE  rownum >= ? AND rownum <= ? order by ship_to_fname, ship_to_lname, ship_to_company
search.shopper.day.paging.sp = {CALL NewShoppersByDayPaging(?,?,?,?,?,?)}
search.count.shopper.day=select count (shopper_id) from contactInfo where { fn YEAR(createdDate) } = ? and { fn MONTH(createdDate) } =? and { fn DAYOFMONTH(createdDate) } = ? 
get.shopper.details = select ship_to_fname, ship_to_lname, ship_to_company, ship_to_address1, ship_to_address2, ship_to_city, ship_to_state, ship_to_postal, ship_to_county, ship_to_country, ship_to_fax, ship_to_phone, ship_to_email,bill_to_fname, bill_to_lname, bill_to_company, bill_to_address1, bill_to_address2, bill_to_city, bill_to_state, bill_to_county, bill_to_country, bill_to_postal, bill_to_phone, bill_to_fax, bill_to_email, shopper_number, creditline, creditexp, creditavail, creditcomment, agent_id from contactInfo where shopper_id = ?
get.shopper.receipts = select count(shopper_id) as receipts from orderHeader where shopper_id = ?
get.shopper.receipts_agentstore= select count(shopper_id) as receipts from orderHeader where shopper_id = ? and AgentIDEnter=201
get.shopper.notes = SELECT t1.*, t2.username as agent_name, t3.subject as subject, t3.noteType as noteType FROM contactLog t1, adminusers t2, notesubjects t3 where t1.agent_id = t2.agent_id and t1.subjectid = t3.indexkey and shopper_id = ? ORDER BY timeoff DESC
get.shopper.size.notes=SELECT COUNT (t1.contact_id) FROM contactLog t1, adminusers t2, notesubjects t3 where t1.agent_id = t2.agent_id and t1.subjectid = t3.indexkey and shopper_id = ? 
get.shopper.move.notes={CALL uspGetShopperMoveNote(?,?,?,?)}

get.siteReferral.description = SELECT sourceID, sourceDescription, masterSource FROM siteReferralSource WHERE isActive = '1' ORDER BY sDsortfield
get.siteReferral.source = SELECT DISTINCT masterSource, mSsortfield FROM siteReferralSource ORDER BY mSSortField
search.shipping.report.bydate=SELECT * FROM estore_history WHERE ship_date BETWEEN ? AND ?
get.admin.users.typeA = SELECT * FROM adminUsers WHERE active = 1 AND userLevel = 'A'

search.epp.report.bymonth.byyear.promotion=SELECT estore_epp_order.epp_id ,estore_epp.description , estore_epp_order.shopper_id , createdDate,estore_epp_order.orderNumber,(estore_epp_order.est_subtotal/100) as est_subtotal,(orderHeader.discount_total-estore_epp_order.dfs_discount/100-cor_discount/100-shipping_discount/100) as volume_discount,(estore_epp_order.dfs_discount/100) as dfs_discount,(estore_epp_order.cor_discount/100) as cor_discount,(orderHeader.shipping_total - estore_epp_order.shipping_discount/100) as shipping_total , orderHeader.total_total   FROM estore_epp_order, orderHeader, estore_epp WHERE estore_epp_order.orderNumber = orderHeader.orderNumber  AND estore_epp.epp_id = estore_epp_order.epp_id AND Month(createdDate) = ? AND Year(createdDate) = ?
search.epp.report.bymonth.byyear.asset=SELECT estore_epp_order.orderNumber ,orderLine.item_sku , estore_inventory.name ,orderLine.product_list_price  FROM estore_epp_order, orderHeader, orderLine, estore_inventory WHERE estore_epp_order.orderNumber = orderHeader.orderNumber AND estore_inventory.item_sku = orderLine.item_sku AND orderHeader.orderNumber = orderLine.orderNumber AND Month(createdDate) = ? AND Year(createdDate) = ? UNION SELECT estore_epp_order.orderNumber , orderLine.item_sku , estore_history.name ,orderLine.product_list_price FROM estore_epp_order, orderHeader, orderLine, estore_history WHERE estore_epp_order.orderNumber = orderHeader.orderNumber  AND estore_history.item_sku = orderLine.item_sku AND orderHeader.orderNumber = orderLine.orderNumber AND Month(createdDate) = ? AND Year(createdDate) = ? 
get.shopper.byID = SELECT * FROM contactInfo WHERE shopper_id = ?
get.agentID.byshopperID = SELECT agent_id FROM contactInfo WHERE shopper_id = ?
customer.checkout.delete.basket = DELETE estore_basket WHERE shopper_id = ? AND (userHold IS NULL OR userHold = '')
customer.checkout.delete.basket.agent = DELETE estore_basket WHERE shopper_id = ? AND (userHold IS NOT NULL AND userHold != '')
customer.checkout.update.inventory = UPDATE estore_inventory SET status = replace(status,'-PENDING','-AVAILABLE') WHERE item_sku IN (SELECT item_sku FROM estore_basket_item WHERE shopper_id = ? AND byAgent = ? )
customer.checkout.delete.basket.item = DELETE estore_basket_item WHERE shopper_id = ? AND byAgent = ? 
customer.checkout.update.basket=UPDATE estore_basket SET shopper_id = ? WHERE shopper_id = ? AND (userHold IS NULL OR userHold = '') 
customer.checkout.update.basket.agent=UPDATE estore_basket SET shopper_id = ? WHERE shopper_id = ? AND (userHold IS NOT NULL AND userHold != '')
customer.checkout.update.basket.item = UPDATE estore_basket_item SET shopper_id = ? WHERE shopper_id = ? AND byAgent = ?
customer.checkout.get.order=SELECT shopper_id, order_id, created, modified, ship_method, cc_name, cc_number, cc_type, cc_expmonth, cc_expyear, epp_id FROM estore_basket WHERE shopper_id = ?
customer.checkout.update.order = UPDATE estore_basket SET modified = ? WHERE shopper_id = ?
#customer.checkout.create.order = INSERT INTO estore_basket (shopper_id,created,modified) VALUES (?,?,?)
list.order.discount=select top 1 percdiscount,holddays from maxdiscount
update.order.discount=UPDATE maxdiscount SET percdiscount = ? , holddays= ?

search.order.pending.export=SELECT h.ordernumber, h.ship_to_name, h.total_total, u.username, h.cc_type, h.createddate FROM orderheader h INNER JOIN contactInfo a ON a.shopper_id = h.shopper_id INNER JOIN adminusers u ON a.agent_id = u.agent_id  WHERE h.orderstatus = 'PENDING' ORDER BY h.createddate DESC
search.order.pending= {CALL uspListAllOrderPending(?,?,?)} 
search.credit.report.order=SELECT contact_name, ordernumber, item_sku, account, reason, credit_date, amount, (SELECT TOP 1 category_id FROM estore_history WHERE (item_SKU = Credit_Form.item_sku)) AS cat1, (SELECT TOP 1 category_id FROM  estore_inventory WHERE (item_sku = Credit_Form.item_sku)) AS cat2 FROM Credit_Form WHERE credit_date BETWEEN ? AND ? ORDER BY credit_date
search.credit.report.order.sp= {CALL uspGetCreditReport(?,?,?,?,?)} 
view.credit.report.order= SELECT sum(amount) FROM credit_form WHERE credit_date BETWEEN ? AND ?

##Basket
basket.order.row=SELECT shopper_id, order_id, created, modified, ship_method,ship_terms,ship_cost, cc_name, cc_number, cc_type, cc_expmonth, cc_expyear, epp_id FROM estore_basket WHERE shopper_id = ? AND (userHold IS NULL OR userHold = '')
basket.order.row.held=SELECT shopper_id, order_id, created, modified, ship_method,ship_terms,ship_cost, cc_name, cc_number, cc_type, cc_expmonth, cc_expyear, epp_id FROM estore_basket WHERE shopper_id = ?
basket.order.row.agent=SELECT shopper_id, order_id, created, modified, ship_method,ship_terms,ship_cost, cc_name, cc_number, cc_type, cc_expmonth, cc_expyear, epp_id FROM estore_basket WHERE shopper_id = ? AND (userHold IS NOT NULL AND userHold != '')
basket.order.row.add=INSERT INTO estore_basket(shopper_id, created, modified,userHold) VALUES(?, ?, ?,?)
basket.order.row.update=UPDATE estore_basket SET modified = ? WHERE   shopper_id = ?  BY_AGENT
basket.items=SELECT mfg_part_number, item.item_sku, item.quantity, item.item_id, item.name, item.short_description, item.placed_price, item.weight FROM estore_basket_item item WHERE shopper_id = ? AND byAgent = ? ORDER BY item_id
basket.item.listPrice=SELECT list_price, modified_price FROM estore_inventory WHERE item_sku = ? 
basket.count.held.order=SELECT COUNT(a.held_order) AS heldOrders  FROM ordersHeld  a INNER JOIN estore_basket b ON a.held_order = b.shopper_id INNER JOIN contactInfo t3 ON a.shopper_id = t3.shopper_id WHERE WHERE_CONDITION
basket.inventory.exp=UPDATE estore_inventory SET status = REPLACE(status, '-PENDING', '-AVAILABLE') WHERE  item_sku IN (SELECT item_sku FROM estore_basket_item WHERE (shopper_id NOT IN (SELECT held_order FROM ordersHeld)) AND (datediff(mi,modified,getdate()) > 90))
basket.items.exp=DELETE FROM estore_basket_item WHERE (shopper_id NOT IN (SELECT held_order FROM ordersHeld)) AND (datediff(mi,modified,getdate()) > 90)
##End Basket
customer.checkout.update.shopper = UPDATE contactInfo SET updatedDate = GetDate(), bill_to_fname = ? , bill_to_lname = ? , bill_to_title = ? , bill_to_company = ? , bill_to_address1 = ? , bill_to_address2 = ? , bill_to_city  = ? , bill_to_state = ? , bill_to_postal = ? ,bill_to_county  = ? , bill_to_country = ? , bill_to_fax = ? , bill_to_phone = ? , bill_to_phoneext = ? , bill_to_email = ? , ship_to_fname = ? , ship_to_lname = ? , ship_to_title = ? , ship_to_company = ? , ship_to_address1 = ? , ship_to_address2 = ? , ship_to_city = ? , ship_to_state = ? , ship_to_postal = ? , ship_to_county = ? , ship_to_country = ? , ship_to_fax = ? , ship_to_phone = ? , ship_to_phoneext = ? , ship_to_email = ?
customer.checkout.update.manager = ,tax_exempt = ? , tax_exempt_number = ? , tax_exempt_expire = ? ,latperdiscount = ? ,latamtdiscount = ? , latexpdate = ? , insperdiscount	= ? ,insamtdiscount = ? ,insexpdate = ? , optperdiscount = ? , optamtdiscount = ? ,optexpdate = ? ,dimperdiscount = ? , dimamtdiscount = ? , dimexpdate = ? , monperdiscount = ? ,monamtdiscount = ? , monexpdate = ? , serperdiscount	= ? , seramtdiscount = ? ,serexpdate = ? , worperdiscount	= ? , woramtdiscount = ? , worexpdate = ? , account_type = ? ,loa = ? , creditline = ? , creditexp = ? , creditavail = ? , creditcomment = ?
customer.checkout.update.new1 = ,loginID = ? 
customer.checkout.update.new2 = , password = ? ,hint = ? ,answer = ?
customer.checkout.update.end = ,promo_email = ? WHERE shopper_id = ?
search.filter1.second.summary.report.order=SELECT count(DISTINCT(ordernumber)), channel FROM agent_report WHERE category_id = 11955 AND (ordereddate BETWEEN ? AND ?) AND ordernumber NOT IN (?) GROUP BY channel
search.processor.agent.report.order1=SELECT DISTINCT(processor_type) FROM agent_report WHERE
search.processor.agent.report.order2=AND (ordereddate BETWEEN ? AND ?) ORDER BY processor_type
search.model1a.agent.report.order=SELECT DISTINCT(model) FROM agent_report WHERE
search.model1b.agent.report.order=AND (ordereddate BETWEEN ? AND ?) ORDER BY model
search.model2a.agent.report.order=SELECT DISTINCT(model) FROM agent_report WHERE
search.model2b.agent.report.order=AND (ordereddate BETWEEN ? AND ?) ORDER BY model
#Checkout
checkout.get.item.check=SELECT estore_inventory.image_url, estore_inventory.mfg_part_number, estore_inventory.item_sku, quantity, item_id, estore_basket_item.name, estore_basket_item.short_description, case when modified_price=0 then list_price else modified_price end as list_price, estore_basket_item.placed_price, estore_basket_item.weight, estore_inventory.attribute05, estore_inventory.attribute06, estore_inventory.attribute03, estore_inventory.attribute12, estore_inventory.attribute09, estore_inventory.attribute10, estore_inventory.attribute13, estore_inventory.category_id  FROM estore_basket_item, estore_inventory WHERE shopper_id = ? AND byAgent = ? AND estore_basket_item.item_sku *= estore_inventory.item_sku ORDER BY item_id
checkout.get.promo.by.cat=SELECT * FROM estore_promo_pd WHERE categoryID = ?
checkout.get.CatIDFamily=SELECT * FROM estore_inventory WHERE item_sku =  ?  
checkout.get.max.discount=SELECT * FROM maxdiscount
checkout.contrib.promotion.code=select epp_id, dfs_p_contrib  from estore_epp where epp_id = ? and end_date >= GetDate() and start_date <= GetDate() and deleted = 0
checkout.discount.item=UPDATE discount_item SET price = price - (price * ? /100) WHERE ordernumber = ?
checkout.update.promotion.basket.item=UPDATE estore_basket SET epp_id  = ? , modified = ? WHERE  shopper_id = ?
checkout.order.line.item.discount=UPDATE estore_basket_item SET placed_price = ? WHERE shopper_id  = ? and item_sku = ?
checkout.select.quantity.get=select dbo.check_cat_new(?,?) as cat 
#Add new customer when checkout
customer.checkout.add.shopper = INSERT INTO contactInfo (shopper_id, createdDate, updatedDate, bill_to_fname, bill_to_lname, bill_to_title, bill_to_company, bill_to_address1, bill_to_address2, bill_to_city, bill_to_state, bill_to_postal, bill_to_county, bill_to_country, bill_to_fax, bill_to_phone, bill_to_phoneext, bill_to_email, ship_to_fname, ship_to_lname, ship_to_title, ship_to_company, ship_to_address1, ship_to_address2, ship_to_city, ship_to_state, ship_to_postal, ship_to_county, ship_to_country, ship_to_fax, ship_to_phone, ship_to_phoneext, ship_to_email, tax_exempt, tax_exempt_number, tax_exempt_expire, loginID, password, hint, answer, promo_email, heardAboutSiteFrom, primUse, agent_id, agent_id_exp, latperdiscount, latamtdiscount, latexpdate , insperdiscount, insamtdiscount, insexpdate, optperdiscount, optamtdiscount, optexpdate , dimperdiscount, dimamtdiscount, dimexpdate, monperdiscount, monamtdiscount, monexpdate, serperdiscount, seramtdiscount, serexpdate, worperdiscount, woramtdiscount, worexpdate, account_type, loa) VALUES (?, GetDate(), GetDate(), ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

##All Pending Order
search.view1.pending.order=select T2.*, T1.* from orderHeader T1 LEFT OUTER JOIN estore_epp_order T2 ON T1.OrderNumber = T2.OrderNumber where T1.OrderNumber = ?
search.view2.pending.order=select * from orderLine where OrderNumber = ? order by item_id
search.view3.pending.order=select * from adminUsers where agent_id = ?
search.view4.pending.order=SELECT carrier+' '+service as description FROM shipVia WHERE shipid = ?
search.view5.pending.order=select TOP 1 * from authlog where order_id =? order by authid desc
search.view6.pending.order=select TOP 1 account_type from contactinfo where shopper_id = ?
search.view7.pending.order=select t1.shopper_number from contactinfo t1 inner join orderheader t2 on t1.shopper_id = t2.shopper_id where t2.ordernumber = ?
search.view8.pending.order=select category_id, attribute01 , attribute02, attribute03,attribute04,attribute05,attribute06,attribute07,attribute08,attribute09,attribute10 ,attribute11,attribute12,attribute13,attribute14,attribute15,attribute16,attribute17,attribute18,attribute19,attribute20,attribute21,attribute22,attribute23,attribute24,attribute25,attribute26,attribute27,attribute28,attribute29,attribute30,attribute31,attribute32,attribute33,attribute34,attribute35 ,attribute36,attribute37 ,attribute38,attribute39,attribute40 from estore_inventory T1 where T1.item_sku= ? union select category_id ,attribute01,attribute02 ,attribute03 ,attribute04,attribute05,attribute06,attribute07,attribute08,attribute09,attribute10,attribute11,attribute12,attribute13 ,attribute14 ,attribute15,attribute16,attribute17,attribute18,attribute19,attribute20,attribute21,attribute22,attribute23,attribute24 ,attribute25,attribute26,attribute27,attribute28,attribute29,attribute30,attribute31 ,attribute32,attribute33,attribute34,attribute35,attribute36 ,attribute37 ,attribute38,attribute39,attribute40 from estore_history T2 where T2.item_sku= ?
search.view9.pending.order=UPDATE orderheader SET orderstatus = 'CLEAR' WHERE ordernumber = ?
search.count.all.pending.order=SELECT COUNT(DISTINCT h.ordernumber) FROM orderheader h, adminusers u where (h.agentidenter = u.agent_id) and (h.orderstatus = 'PENDING')




##Checkout2 - Shipping
customer.checkout2.ShippingUnit.Admin = select price from shipCost where method=? and units=?
customer.checkout2.ShippingWeight.Admin = SELECT t1.shipid, t1.carrier, t1.service, t2.zone, t3.Price, t1.isDefault FROM shipVia t1 LEFT OUTER JOIN shipCost t3 ON t1.carrier = t3.carrier RIGHT OUTER JOIN shipZone t2 ON t1.shipid = t2.shipid AND t3.zone = t2.zone WHERE (t1.isAvailable = 1) AND (? BETWEEN t2.zip_1 AND t2.zip_2) AND (t3.Weight = ?) ORDER BY t1.shipid
customer.checkout2.WExact.Admin = SELECT t1.shipid, t1.carrier, t1.service, t2.zone, t3.Price, t1.isDefault FROM shipVia t1 LEFT OUTER JOIN shipCost t3 ON t1.carrier = t3.carrier RIGHT OUTER JOIN shipZone t2 ON t1.shipid = t2.shipid AND t3.zone = t2.zone WHERE (t1.isAvailable = 1) AND (? BETWEEN t2.zip_1 AND t2.zip_2) AND (t3.Weight = ?) AND (t1.shipid = ?)
customer.checkout2.ShippingUnit = select price from shipCostFree where method=? and units=?
customer.checkout2.ShippingWeight = SELECT t1.shipid, t1.carrier, t1.service, t2.zone, t3.Price, t1.isDefault FROM shipVia t1 LEFT OUTER JOIN shipCostFree t3 ON t1.carrier = t3.carrier RIGHT OUTER JOIN shipZone t2 ON t1.shipid = t2.shipid AND t3.zone = t2.zone WHERE (t1.isAvailable = 1) AND (? BETWEEN t2.zip_1 AND t2.zip_2) AND (t3.Weight = ?) ORDER BY t1.shipid
customer.checkout2.WExact = SELECT t1.shipid, t1.carrier, t1.service, t2.zone, t3.Price, t1.isDefault FROM shipVia t1 LEFT OUTER JOIN shipCostFree t3 ON t1.carrier = t3.carrier RIGHT OUTER JOIN shipZone t2 ON t1.shipid = t2.shipid AND t3.zone = t2.zone WHERE (t1.isAvailable = 1) AND (? BETWEEN t2.zip_1 AND t2.zip_2) AND (t3.Weight = ?) AND (t1.shipid = ?)
customer.checkout.get.eppPromotion = SELECT epp_id, description, start_date, end_date, dfs_p_contrib, dfs_d_contrib, cor_p_contrib, cor_d_contrib, free_shipping FROM estore_epp WHERE epp_id = ? AND end_date >= GetDate() AND start_date <= GetDate() AND deleted=0
estore_basket.update=update estore_basket set ship_method= ? , ship_terms= ? , ship_cost= ?  where shopper_id = ? AND (userHold IS NULL OR userHold = '' )
estore_basket.update.agent=update estore_basket set ship_method= ? , ship_terms= ? , ship_cost= ?  where shopper_id = ? AND (userHold IS NOT NULL AND userHold != '' )
contactInfo.update=update contactInfo set ship_method= ? where shopper_id = ?
shortShipping.get=SELECT carrier + ' ' + service as description FROM shipVia WHERE shipid = ?
##Checkout3 
checkout3.payMethods=Select code, name, isCreditCard from payMethods where isAvailable=1 Order by code
checkout3.getOrderReceipt=select OrderNumber, tracking_number, shopper_id, createdDate, updatedDate, ship_to_name, ship_to_company, ship_to_address1, ship_to_address2, ship_to_city, ship_to_state, ship_to_postal, ship_to_country, ship_to_fax, ship_to_phone, ship_to_email, ship_method, ship_terms, bill_to_name, bill_to_company, bill_to_address1, bill_to_address2, bill_to_city, bill_to_state, bill_to_postal, bill_to_country, bill_to_fax, bill_to_phone, bill_to_email, tax_exempt, tax_exempt_number, tax_exempt_expire, oadjust_subtotal, discount_total, shipping_total, handling_total, tax_total, tax_included, payment_terms, cc_name, cc_type, cc_expmonth, cc_expyear, cc_number, total_total, orderStatus from orderHeader where shopper_id = ? and OrderNumber =  ?
checkout3.getTaxTables=SELECT * FROM  taxTables where zip = ? and city = ? ORDER BY [DEFAULT] DESC

checkout.insert.orderHeader=INSERT INTO orderHeader(orderNumber,shopper_id,rf_date,ship_to_name,ship_to_company,ship_to_address1,ship_to_address2,ship_to_city,ship_to_state,ship_to_postal,ship_to_country,ship_to_phone,ship_to_email,ship_method,bill_to_name,bill_to_company,bill_to_address1,bill_to_address2,bill_to_city,bill_to_state,bill_to_postal,bill_to_country,bill_to_phone,bill_to_email,oadjust_subtotal,handling_total,freightTax,shipping_total,tax_total,total_total,approvalNumber,cc_name,cc_number,cc_expmonth,cc_expyear,payment_terms,cc_type,createdDate,updatedDate,taxable,orderStatus,statetaxperc,countytaxperc,countytrantaxperc,citytaxperc,citytrantaxperc,agentIDEnter,DataSource,EditAgent,user_name,ip_address,total_disc,discount_total,total_list,listingtype,avs_address,avs_zip,avs_country,venuetype,ship_terms,byAgent) VALUES(?,?,GETDATE(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,GETDATE(),GETDATE(),?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
checkout.insert.orderline=INSERT INTO orderline(orderNumber,shopper_id,created,modified,item_id,item_sku,description,weight,quantity,qtyPicked,qtyShipped,product_list_price,iadjust_regularprice,iadjust_currentprice,oadjust_adjustedprice,discounted_price,cosmetic_grade) VALUES(?,?,GETDATE(),GETDATE(),?,?,?,?,?,?,?,?,?,?,?,?,?)

checkout3.ordersHeld.set=insert into ordersHeld (shopper_id, held_order,exp_date) values (?,?,?) 
checkout3.ordersHeld.inventory.set=update estore_inventory set status=replace(status,'-PENDING','-HELD') where item_sku in (SELECT item_sku FROM estore_basket_item WHERE shopper_id = ? AND byAgent = ? )
checkout3.ordersHeld.basket.set=update estore_basket set shopper_id = ? , userHold = ? where shopper_id =  ? AND (userHold IS NULL OR userHold = '')
checkout3.ordersHeld.basket.set.agent=UPDATE estore_basket set shopper_id = ? , userHold = ? WHERE shopper_id =  ? AND (userHold IS NOT NULL AND userHold != '')
checkout3.ordersHeld.basketItem.set=UPDATE estore_basket_item SET shopper_id = ? WHERE shopper_id =  ? AND byAgent = ?
checkout3.delete.order.header=DELETE FROM orderheader WHERE OrderNumber = ? AND shopper_id = ?
checkout3.delete.order.header.line=DELETE FROM orderline WHERE OrderNumber = ? AND shopper_id = ?
checkout3.add.avg.mhz=INSERT INTO avg_mhz VALUES(?, ?, ?, ?, ?)
checkout3.delete.avg.mhz=DELETE avg_mhz WHERE ordernumber = ? 
checkout3.add.authLog=INSERT INTO authLog(order_id, payment_auth_code, payment_payment_request, payment_payment_response, payment_pop_auth_code, payment_pop_action_code, payment_pop_avs_code, payment_pop_customer_id, payment_pop_error_code, payment_pop_merchant_id, payment_pop_order_id, payment_pop_order_valid_til, payment_pop_payload, payment_pop_price, payment_pop_product_descr, payment_pop_ref_code, payment_pop_sale_date, payment_pop_sign, payment_pop_status, payment_pop_txn_id, payment_pop_error_message) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)

##Cancel held
checkout3.cancelHeld.getOrder=select shopper_id from estore_basket where order_id = ?
checkout3.cancelHeld.getListSku=select item_sku from estore_basket_item where shopper_id = ?
checkout3.cancelHeld.deleteOrdersHeld=delete ordersHeld where held_order = ?
checkout3.cancelHeld.deleteBasketItem=delete estore_basket_item where shopper_id = ?
checkout3.cancelHeld.deleteEstoreBasket=delete estore_basket where order_id = ?
checkout3.cancelHeld.deleteAvgMhz=delete avg_mhz where ordernumber = ?


##shopper 
shopper.view.receipts=SELECT agent_id,ship_to_fname,ship_to_lname,shopper_number,shopper_id from contactInfo where shopper_id =?
shopper.view.receipts.viewtotal={CALL uspGetShopperViewReceipts(?,?,?,?)}
shopper.view.receipts.viewtotal.agentstore={CALL uspGetShopperViewReceipts_AgentStore(?,?,?,?)}
shopper.view.basket.agent=SELECT b.item_sku, b.name, b.item_id, b.placed_price, i.category_id, i.attribute05, i.attribute06, i.attribute18 , i.attribute09, i.attribute13  FROM estore_basket_item b INNER JOIN estore_inventory i ON b.item_sku = i.item_sku INNER JOIN estore_basket c ON c.shopper_id=b.shopper_id WHERE b.shopper_id = ? and b.byAgent = ? and c.userHold=? ORDER BY b.item_id
shopper.view.basket=SELECT b.item_sku, b.name, b.item_id, b.placed_price, i.category_id, i.attribute05, i.attribute06, i.attribute18, i.attribute09 , i.attribute13 FROM estore_basket_item b INNER JOIN estore_inventory i ON b.item_sku = i.item_sku where b.shopper_id = ? and b.byAgent = ? ORDER BY b.item_id
shopper.view.basket.heldordergeneral.customer=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold  from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? ) and (userHold=''  or userHold is null) order by order_id
shopper.view.basket.heldordergeneral.agent=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold  from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order  INNER JOIN contactInfo c ON b.shopper_id = c.shopper_id Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? ) and (userHold=''  or userHold is null) order by order_id

shopper.view.basket.heldordergeneral=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold  from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? ) order by order_id

shopper.view.basket.heldordergeneraldetail=SELECT b.item_sku, b.name, b.item_id, b.placed_price, i.category_id, i.attribute05, i.attribute06, i.attribute18, i.attribute09, i.attribute13 from estore_basket_item b INNER JOIN estore_inventory i ON b.item_sku = i.item_sku where b.shopper_id =? order by b.item_id

shopper.view.basket.held=update estore_inventory set status = replace(status,'-HELD','-PENDING') where item_sku in (select item_sku from estore_basket_item where shopper_id = ?)
shopper.view.basket.held1.agent=update estore_basket_item set shopper_id = ?, byAgent = 1, modified = getdate() where shopper_id = ?
shopper.view.basket.held3.agent=update estore_basket Set userHold = ? , shopper_id = ?, modified = getdate() WHERE shopper_id = ?
shopper.view.basket.held2=delete estore_basket where shopper_id = ? AND (userHold IS NULL OR userHold = '')
shopper.view.basket.held2.agent=delete estore_basket where shopper_id = ? AND (userHold IS NOT NULL AND userHold != '')
shopper.view.basket.held1.customer=update estore_basket_item set shopper_id = ?, byAgent = 0 where shopper_id = ?
shopper.view.basket.held3.customer=update estore_basket Set userHold = '' , shopper_id = ? WHERE shopper_id = ?
shopper.view.basket.held4=delete ordersHeld where held_order = ?

shopper.view.basket.cancel=update estore_inventory set status = replace(status,'-PENDING','-AVAILABLE') where item_sku in (select item_sku from estore_basket_item where shopper_id = ?)
shopper.view.basket.cancel1=DELETE estore_basket_item where shopper_id = ?
shopper.view.basket.update.expriration.date=update ordersHeld  set exp_date = ? Where held_order = (select held_order from estore_basket a INNER JOIN ordersHeld b  ON a.shopper_id = b.held_order where b.shopper_id = ? AND a.order_id= ? )

shopper.view.basket.select.expriration.date=select b.exp_date from estore_basket a INNER JOIN ordersHeld b  ON a.shopper_id = b.held_order where b.shopper_id = ? AND a.order_id= ?
shopper.view.basket.select.created.date=select created from estore_basket a INNER JOIN ordersHeld b  ON a.shopper_id = b.held_order where b.shopper_id = ? AND a.order_id= ?
shopper.select.subject.type=SELECT DISTINCT(subject), orderBy FROM notesubjects order by orderBy
shopper.select.group.subject=SELECT subject, noteType, indexKey FROM notesubjects group by subject, noteType, indexKey
shopper.select.index.key=SELECT indexKey FROM notesubjects where subject = ? and noteType = ?
shoppert.insert.note=insert into contactLog (shopper_id, agent_id, [timeon], timeoff, topic, notes, status, ordernumber, subjectid) VALUES( ? , ? , GetDate(), ? , ? , ? , 0 , ? , ? )  
shoppert.insert.attempt=insert decline_attempt VALUES (? , GetDate() , ? )
shopper.select.agent.id.edit.expiration=SELECT agent_id, agent_id_exp FROM contactInfo WHERE shopper_id =?
shopper.select.edit.expiration.admin.user=SELECT * FROM adminUsers WHERE active = 1 AND userLevel = 'A'
shopper.update.expiration=UPDATE contactInfo set agent_id = ? where shopper_id = ?

##ordersHeld cronbtab
order.hold.get=SELECT a.*,DATEDIFF(d,GETDATE(),exp_date) as exp_days,b.userHold  FROM ordersHeld a INNER JOIN estore_basket b ON a.held_order=b.shopper_id WHERE (userHold IS NULL OR userHold = '') AND DATEDIFF(d,GETDATE(),exp_date) <= 1
order.hold.inventory.update.status=UPDATE estore_inventory SET status = replace(status,'-PENDING','-AVAILABLE') WHERE item_sku in (SELECT item_sku FROM estore_basket_item WHERE shopper_id = ?)
order.hold.estore.basket.delete=DELETE FROM estore_basket WHERE shopper_id = ?
order.hold.estore.basket.item.delete=DELETE FROM estore_basket_item WHERE shopper_id = ?
order.hold.delete=DELETE FROM ordersHeld WHERE held_order = ?

##Customer
customer.validation.zip1 = select zip, city, county, state from taxTables where zip = ?
customer.validation.zip2 = select zip, city, county, state from taxTables where soundex(city)=soundex(?) and zip=?
customer.validation.zip3 = select distinct city from taxTables where zip = ?

customer.checkout.update.basket.item.update.price = Update estore_basket_item SET  placed_price = (SELECT (CASE WHEN modified_price = 0 THEN list_price ELSE modified_price END) AS price FROM Estore_inventory WHERE Estore_inventory.item_sku = estore_basket_item.item_sku)*100 , shopper_id = ? WHERE shopper_id = ? AND byAgent = ?

## viewbasket

sql.order.view.basket.agent.general=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order  INNER JOIN contactInfo c ON b.shopper_id = c.shopper_id Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? ) and (a.userHold is null or a.userHold ='' or a.userHold= ?)order by order_id
sql.order.view.basket.agent=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order  INNER JOIN contactInfo c ON b.shopper_id = c.shopper_id Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? ) and (a.userHold= ?)   order by order_id
sql.order.view.basket.customer=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order  INNER JOIN contactInfo c ON b.shopper_id = c.shopper_id Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? )and ( b.shopper_id in (select shopper_id from contactInfo where agent_id= ? )) and (a.userHold is null or a.userHold='' ) order by order_id
sql.order.view.basket.admin.customer=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order  INNER JOIN contactInfo c ON b.shopper_id = c.shopper_id Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? ) and (a.userHold is null or a.userHold='' )   order by order_id
sql.order.view.basket.agent.admin=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order  INNER JOIN contactInfo c ON b.shopper_id = c.shopper_id Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? ) and (a.userHold is not null and a.userHold != '')   order by order_id
sql.order.view.basket.customer.notadmin=SELECT DISTINCT a.shopper_id as held_order, a.order_id,b.exp_date,a.userHold from estore_basket a INNER JOIN  ordersHeld b ON  a.shopper_id  = b.held_order  INNER JOIN contactInfo c ON b.shopper_id = c.shopper_id Where a.shopper_id in (select held_order from ordersHeld where shopper_id = ? )and (a.userHold is null or a.userHold='' ) order by order_id


##Agent setup
search.agent.agentId = agent_Id = 0
search.agent.fullname = fullname LIKE '0%'
search.agent.username = UserName LIKE '0%'
search.agent.userLevel = userLevel = '0'
search.agent.email	= email = '0'
search.agent.isReport = report = 0
search.agent.isAdmin = Admin = 0
search.agent.isActive = active = 0
search.agent.userType = UserType = 0
search.agent.all = {CALL uspPagingAgentLookup(?,?,?,?)} 
search.agent.add = INSERT INTO adminUsers(Username,Password,Admin,UserType,userLevel,active,email,fullname,report) VALUES(?,?,?,?,?,?,?,?,?) 
search.agent.delete = DELETE FROM adminUsers WHERE agent_id = ?
search.agent.check.exist = SELECT * FROM adminUsers WHERE Username = ?
search.agent.get.byId = SELECT * FROM adminUsers WHERE agent_id = ?
search.agent.update = UPDATE adminUsers SET Password = ?, Admin = ?, UserType = ?, userLevel = ?, active = ?, email = ?, fullname = ?, report = ? WHERE agent_id = ?
shopper.check.exist.loginID = SELECT * FROM contactInfo WHERE loginID = ?
search.agent.check.in.use =  {CALL uspCheckForAgentInUse(?)} 

update.order.discount.latperdiscount=UPDATE contactInfo SET latperdiscount = ? WHERE  latperdiscount > ?
update.order.discount.insperdiscount=UPDATE contactInfo SET insperdiscount = ? WHERE  insperdiscount > ?
update.order.discount.optperdiscount=UPDATE contactInfo SET optperdiscount = ? WHERE  optperdiscount > ?
update.order.discount.dimperdiscount=UPDATE contactInfo SET dimperdiscount = ? WHERE  dimperdiscount > ?
update.order.discount.monperdiscount=UPDATE contactInfo SET monperdiscount = ? WHERE  monperdiscount > ?
update.order.discount.serperdiscount=UPDATE contactInfo SET serperdiscount = ? WHERE  serperdiscount > ?
update.order.discount.worperdiscount=UPDATE contactInfo SET worperdiscount = ? WHERE  worperdiscount > ?
order.agent.report.update.AdminUsers=UPDATE adminUsers SET report=1 WHERE agent_id IN (SELECT distinct agentid FROM agent_report WHERE channel='MRI')

search.state.byshippingtax=SELECT * FROM shippingTax WHERE stateName=?
order.clear.log=insert into ORDER_CLEAR_LOG values(?,getdate(),?)


sql.order.agent.report.BrandLaptop=SELECT DISTINCT brandtype FROM agent_report WHERE category_id = '11946' AND brandtype <> 'N/A' ORDER BY brandtype
sql.order.agent.report.BrandWorkstation=SELECT DISTINCT brandtype FROM agent_report WHERE category_id = '11947' AND brandtype <> 'N/A' ORDER BY brandtype
sql.order.agent.report.BrandDesktop=SELECT DISTINCT brandtype FROM agent_report WHERE category_id = '11949' AND brandtype <> 'N/A' ORDER BY brandtype